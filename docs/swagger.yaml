definitions:
  models.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Сервис аутентификации с JWT access и refresh токенами
  title: AuthJWT API
  version: "1.0"
paths:
  /logout:
    post:
      consumes:
      - application/json
      description: Удаляет refresh-токен пользователя
      parameters:
      - description: Refresh Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Tokens'
      produces:
      - application/json
      responses:
        "200":
          description: Выход выполнен успешно
          schema:
            type: string
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "500":
          description: Ошибка удаления токена
          schema:
            type: string
      summary: Деавторизация
      tags:
      - auth
  /refresh:
    post:
      consumes:
      - application/json
      description: Обновляет токены по refresh-токену из тела запроса
      parameters:
      - description: Refresh Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Tokens'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tokens'
        "400":
          description: Неверный формат запроса
          schema:
            type: string
        "401":
          description: Ошибка авторизации
          schema:
            type: string
        "500":
          description: Внутренняя ошибка
          schema:
            type: string
      summary: Обновить access и refresh токены
      tags:
      - tokens
  /tokens:
    post:
      consumes:
      - application/json
      description: Возвращает новую пару токенов по GUID пользователя
      parameters:
      - description: User GUID
        in: query
        name: guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tokens'
        "400":
          description: Некорректный GUID
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получить access и refresh токены
      tags:
      - tokens
  /whoami:
    get:
      description: Возвращает GUID текущего пользователя по access-токену
      produces:
      - application/json
      responses:
        "200":
          description: GUID пользователя
          schema:
            type: string
        "401":
          description: Неавторизован
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Получить информацию о текущем пользователе
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
